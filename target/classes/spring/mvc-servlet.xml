<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!--@MVC를 위한 기본설정을 자동으로 처리 -->

	<annotation-driven>
		<!-- messageConvertert -->
		<message-converters>
			<beans:bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>text/html; charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>



			<beans:bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>application/json; charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>
		</message-converters>



	</annotation-driven>
	<!-- 요청을 handler mapper 에서 존재 하지 않을 경우 was에 default-servlet에 위임 확장자 매핑에는 
		불필요 정적 자원 (js,css,img 등을 처리하기 위해 기술 -->
	<default-servlet-handler />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적 자원 (js,css,img 등을 처리하기 위해 기술 요청 경로와 실제 경로가 다르게 처리 가능 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/boot/**"
		location="/bootstrap-3.3.2-dist/" />

		<!-- // 전역적 인터셉터 -->
	<interceptors>
		<beans:bean class="com.study.common.interceptor.LoggingInterceptor" />
		<!-- // 매핑별 인터셉터 -->
		<interceptor>
			<mapping path="/reply/**" />
			<mapping path="/member/**" />
			<!-- 매핑 중 제외할 대상 -->
			<exclude-mapping path="/reply/replyList" /> 
			<beans:bean class="com.study.common.interceptor.LoginCheckInterceptor" />
		</interceptor>
	</interceptors>





	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!--@MVC @component에 빈으로 등록 @Component, @Repository, @Service, @Controller, 
		@RestController, @ControllerAdvice, and @Configuration stereotypes will be 
		detected -->

	<context:component-scan base-package="com.study"
		use-default-filters="true" />

	<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
		</context:component-scan> -->
</beans:beans>
